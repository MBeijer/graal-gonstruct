Import('env', 'install')
env = env.Clone() # What happens here, stays here.

def config_build(target, source, env):
  values = install.GetConfig()
  values['version_string'] = env['VERSION']

  for t,s in zip(target,source):
    source_file = file(str(s), 'r')
    target_file = file(str(t), 'w')
    target_file.write(source_file.read() % values)
    target_file.close()
    source_file.close()

images = []

images.append(env.Svg('#/dist/images/no-img.png',      'no-img'))
images.append(env.Svg('#/dist/images/npc-default.png', 'npc-default'))
images.append(env.Svg('#/dist/images/logo.png',        'logo'))

for button in ['create-link', 'links', 'signs', 'npcs', 'tilesets']:
  images.append(
    env.Svg('#/dist/images/toolbar-'+button+'.png', 'toolbar-'+button))

image_data = \
  env.Command('image_data.cpp', '#/dist/images',
              'ruby src/level_editor/make_images.rb $SOURCE $TARGET')
env.SideEffect('image_data.hpp', image_data)
env.Depends(image_data, 'make_images.rb')

if env['PLATFORM'] == 'win32':
  resource_file = \
    env.Command('resource.o', '#/win/gonstruct.rc', 'windres -i $SOURCE -o $TARGET')
  env.Depends(resource_file, '#/win/gonstruct.rc')
  env.AlwaysBuild(
    env.Command('#/win/gonstruct.iss', '#/win/gonstruct.iss.in', config_build))


env.AlwaysBuild(
  env.Command('config.cpp', 'config.cpp.in', config_build))

env.Append(LIBS = ['core', 'boost_system-mt', 'boost_filesystem-mt'],
           CPPPATH = '.',
           LIBPATH = '#src/core')

env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gthread-2.0 gtksourceview-2.0')

src_files = Split("""
  basic_tiles_display.cpp
  config.cpp
  copy_cache.cpp
  default_tile_display.cpp
  filesystem.cpp
  helper.cpp
  image_cache.cpp
  image_data.cpp
  level.cpp
  level_display.cpp
  link_list.cpp
  main.cpp
  npc_list.cpp
  preferences.cpp
  preferences_display.cpp
  sign_list.cpp
  tile_objects_display.cpp
  tileset.cpp
  tileset_display.cpp
  tileset_list.cpp
  undo_buffer.cpp
  undo_diffs.cpp
  window.cpp""")

if env['PLATFORM'] == 'win32':
  src_files += ['resource.o']

env.Program('#dist/gonstruct', src_files)
